#!/usr/bin/env bash

[ $# -lt 1 ] && echo "Usage: $0 file [args] >&2 && exit 1"
[ ! -r "$1" ] && echo "no such file $1 >&2 && exit 2"

EXEC_FILE=$(mktemp /tmp/dyncXXXXXX)
COMPILER=${DYNC_TARGET}gcc
# ARCH=$(echo ${DYNC_TARGET} | sed "s:-.*::")
# QEMU_ARCH=qemu-$ARCH
XSCHEME=c
COMPFLAGS=$CFLAGS

[ "$(basename "$0")" == "dync++" ]   && COMPILER=g++ && XSCHEME=c++ && COMPFLAGS="$CXXFLAGS"
[ "$(basename "$0")" == "dync++11" ] && COMPILER=g++ && XSCHEME=c++ && COMPFLAGS="$CXXFLAGS -std=c++11"
[ "$(basename "$0")" == "dync++23" ] && COMPILER=g++ && XSCHEME=c++ && COMPFLAGS="$CXXFLAGS -std=c++23"
FILENAME=$1
shift
DYNC_FLAGS=$(grep -E "^[[:space:]]*#define[[:space:]]+DYNC" "$FILENAME" |sed "s:^\s*#define\s*DYNC_FLAGS\s*::g")

$COMPILER -x $XSCHEME <(
    if head -n 1 "$FILENAME" | grep -E "^#!" >/dev/null; then
        echo "/*" "$(head -n 1 "$FILENAME")" "*/"
        awk "{if(NR > 1)print}" "$FILENAME"
    else
        cat "$FILENAME"
    fi
) $COMPFLAGS $LDFLAGS -I"$PWD" $(eval echo "$DYNC_FLAGS") -o "$EXEC_FILE" >/dev/null

cleanup() {
    rm -f "$EXEC_FILE"
}
trap cleanup INT QUIT HUP

[ -x "$EXEC_FILE" ] && "$EXEC_FILE" "$@"
RET=$?
cleanup
exit $RET
